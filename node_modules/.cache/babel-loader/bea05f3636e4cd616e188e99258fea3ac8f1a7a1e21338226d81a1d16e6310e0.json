{"ast":null,"code":"var _jsxFileName = \"/home/anshul/Documents/Github/Programming/socket-app/src/components/SocketClientOne.js\";\nimport { io } from \"socket.io-client\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SocketCLientOne() {\n  const socket = io(\"http://localhost:5001/\");\n  socket.on(\"connect\", () => {\n    console.log(socket.id);\n    const engine = socket.io.engine;\n    console.log(engine.transport.name); // in most cases, prints \"polling\"\n\n    engine.once(\"upgrade\", () => {\n      // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n      console.log(engine.transport.name); // in most cases, prints \"websocket\"\n    });\n    engine.on(\"packet\", ({\n      type,\n      data\n    }) => {\n      // called for each packet received\n      console.log(`type of packet received: ${type}, and data is: ${JSON.stringify(data)}`);\n    });\n    engine.on(\"packetCreate\", ({\n      type,\n      data\n    }) => {\n      // called for each packet sent\n      console.log(`type of packet created: ${type}, and data is: ${JSON.stringify(data)}`);\n    });\n    engine.on(\"drain\", () => {\n      // called when the write buffer is drained\n    });\n    engine.on(\"close\", reason => {\n      // called when the underlying connection is closed\n    });\n  });\n  socket.on(\"data\", someData => {\n    console.log(someData);\n  });\n  function handleInputChange(event) {}\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"formPlaintextEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: \"2\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"10\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            plaintext: true,\n            readOnly: true,\n            defaultValue: \"email@example.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"formPlaintextPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: \"2\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"10\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_c = SocketCLientOne;\nexport default SocketCLientOne;\nvar _c;\n$RefreshReg$(_c, \"SocketCLientOne\");","map":{"version":3,"names":["io","Container","Row","Col","Form","jsxDEV","_jsxDEV","SocketCLientOne","socket","on","console","log","id","engine","transport","name","once","type","data","JSON","stringify","reason","someData","handleInputChange","event","fluid","children","Group","as","className","controlId","Label","column","sm","fileName","_jsxFileName","lineNumber","columnNumber","Control","plaintext","readOnly","defaultValue","placeholder","_c","$RefreshReg$"],"sources":["/home/anshul/Documents/Github/Programming/socket-app/src/components/SocketClientOne.js"],"sourcesContent":["import { io } from \"socket.io-client\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SocketCLientOne() {\n    const socket = io(\"http://localhost:5001/\");\n\n    socket.on(\"connect\", () => {\n        console.log(socket.id);\n\n        const engine = socket.io.engine;\n        console.log(engine.transport.name); // in most cases, prints \"polling\"\n\n        engine.once(\"upgrade\", () => {\n            // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n            console.log(engine.transport.name); // in most cases, prints \"websocket\"\n        });\n\n        engine.on(\"packet\", ({ type, data }) => {\n            // called for each packet received\n            console.log(\n                `type of packet received: ${type}, and data is: ${JSON.stringify(\n                    data\n                )}`\n            );\n        });\n\n        engine.on(\"packetCreate\", ({ type, data }) => {\n            // called for each packet sent\n            console.log(\n                `type of packet created: ${type}, and data is: ${JSON.stringify(\n                    data\n                )}`\n            );\n        });\n\n        engine.on(\"drain\", () => {\n            // called when the write buffer is drained\n        });\n\n        engine.on(\"close\", (reason) => {\n            // called when the underlying connection is closed\n        });\n    });\n\n    socket.on(\"data\", (someData) => {\n        console.log(someData);\n    });\n\n    function handleInputChange(event) {}\n\n    return (\n        <Container fluid=\"md\">\n            <Form>\n                <Form.Group\n                    as={Row}\n                    className=\"mb-3\"\n                    controlId=\"formPlaintextEmail\"\n                >\n                    <Form.Label column sm=\"2\">\n                        Email\n                    </Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control\n                            plaintext\n                            readOnly\n                            defaultValue=\"email@example.com\"\n                        />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group\n                    as={Row}\n                    className=\"mb-3\"\n                    controlId=\"formPlaintextPassword\"\n                >\n                    <Form.Label column sm=\"2\">\n                        Password\n                    </Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"password\" placeholder=\"Password\" />\n                    </Col>\n                </Form.Group>\n            </Form>\n        </Container>\n    );\n}\n\nexport default SocketCLientOne;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}