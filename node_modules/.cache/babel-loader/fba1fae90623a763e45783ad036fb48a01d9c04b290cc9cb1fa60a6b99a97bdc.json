{"ast":null,"code":"var _jsxFileName = \"/home/anshul/Documents/Github/Programming/socket-app/src/components/SocketClientOne.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Register from \"./Register\";\nimport HomePage from \"./HomePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SocketCLientOne() {\n  _s();\n  useEffect(() => {\n    const myCookieValue = Cookies.get(\"anshul-chat-user\");\n    if (myCookieValue) {\n      setSenderEmail(myCookieValue);\n      return;\n    }\n  }, []);\n  const sendJoinRequest = () => {\n    socket.emit(\"join\", {\n      email: senderEmail,\n      connectId: socket.id\n    });\n  };\n  const socket = io(\"http://localhost:5001/\", {\n    withCredentials: true,\n    extraHeaders: {\n      ConnectWithAnshul: \"Sure\"\n    }\n  });\n  const [chatMessage, setChatMessage] = useState(\"\");\n  const [senderEmail, setSenderEmail] = useState(null);\n  const [receiverEmail, setReceiverEmail] = useState(null);\n  const [chats, setChats] = useState([]);\n  socket.on(\"already_joined\", msg => {});\n  socket.on(\"joined\", msg => {\n    const requestObj = {\n      senderId: senderEmail,\n      receiverId: receiverEmail\n    };\n    axios.post(\"http://localhost:6001/chat/\", requestObj).then(response => {\n      console.log(response);\n      if (response && response.data && response.data.length > 0) {\n        console.log(\"Setting data, \", response.data);\n        const transformedArray = response.data.map(item => ({\n          id: item._id,\n          msg: item.message,\n          sender: item.senderId,\n          receiver: item.receiverId,\n          createdDate: new Date(item.createdAt),\n          updatedDate: new Date(item.updatedAt)\n        }));\n        setChats(transformedArray);\n      }\n      console.log(chats);\n    }).catch(error => console.error(error));\n    console.log(chats);\n  });\n  socket.on(\"new_msg\", message => {\n    let transformedMap = message;\n    transformedMap[\"createdDate\"] = new Date(message[\"createdDate\"]);\n    transformedMap[\"updatedDate\"] = new Date(message[\"updatedDate\"]);\n    setChats(prevChats => [...prevChats, transformedMap]);\n  });\n  function sendMessageToTheSocket() {\n    socket.emit(\"new_msg\", {\n      message: chatMessage,\n      receiverId: receiverEmail,\n      senderId: senderEmail\n    });\n    const message = {\n      msg: chatMessage,\n      receiver: receiverEmail,\n      sender: senderEmail,\n      id: generateSecureRandomKey(16),\n      createdDate: new Date(),\n      updatedDate: new Date()\n    };\n    setChats(prevChats => [...prevChats, message]);\n    clearInputField();\n    const messageData = {\n      receiverId: receiverEmail,\n      senderId: senderEmail,\n      message: chatMessage\n    };\n    axios.post(\"http://localhost:6001/chat/saveChats\", messageData).then(resp => console.log(resp)).catch(err => console.error(err));\n  }\n  function clearInputField() {\n    setChatMessage(\"\");\n  }\n  function generateSecureRandomKey(length = 8) {\n    const array = new Uint8Array(length);\n    window.crypto.getRandomValues(array);\n    return Array.from(array, byte => byte.toString(16)).join(\"\");\n  }\n  function handleLoginSuccess(senderUsername) {\n    setSenderEmail(senderUsername);\n    sendJoinRequest();\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      width: \"80%\",\n      // Adjust the width as needed\n      marginTop: \"100px\",\n      marginLeft: \"5%\",\n      backgroundColor: \"#f0f0f0\",\n      // Add your desired background color\n      padding: \"20px\",\n      // Add your desired padding\n      boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\" // Add your desired box shadow\n    },\n    children: senderEmail ? /*#__PURE__*/_jsxDEV(HomePage, {\n      onSendMessage: sendMessageToTheSocket,\n      onSetReceiverId: data => setReceiverEmail(data),\n      senderId: senderEmail,\n      receiverId: receiverEmail,\n      chats: chats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      onLogin: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 3\n  }, this);\n}\n_s(SocketCLientOne, \"mI3UcRfSdhirtbKOyXDxqqmIZRw=\");\n_c = SocketCLientOne;\nexport default SocketCLientOne;\nvar _c;\n$RefreshReg$(_c, \"SocketCLientOne\");","map":{"version":3,"names":["useState","useEffect","io","Container","axios","Cookies","Register","HomePage","jsxDEV","_jsxDEV","SocketCLientOne","_s","myCookieValue","get","setSenderEmail","sendJoinRequest","socket","emit","email","senderEmail","connectId","id","withCredentials","extraHeaders","ConnectWithAnshul","chatMessage","setChatMessage","receiverEmail","setReceiverEmail","chats","setChats","on","msg","requestObj","senderId","receiverId","post","then","response","console","log","data","length","transformedArray","map","item","_id","message","sender","receiver","createdDate","Date","createdAt","updatedDate","updatedAt","catch","error","transformedMap","prevChats","sendMessageToTheSocket","generateSecureRandomKey","clearInputField","messageData","resp","err","array","Uint8Array","window","crypto","getRandomValues","Array","from","byte","toString","join","handleLoginSuccess","senderUsername","className","style","width","marginTop","marginLeft","backgroundColor","padding","boxShadow","children","onSendMessage","onSetReceiverId","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/home/anshul/Documents/Github/Programming/socket-app/src/components/SocketClientOne.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Register from \"./Register\";\nimport HomePage from \"./HomePage\";\n\nfunction SocketCLientOne() {\n\tuseEffect(() => {\n\t\tconst myCookieValue = Cookies.get(\"anshul-chat-user\");\n\n\t\tif (myCookieValue) {\n\t\t\tsetSenderEmail(myCookieValue);\n\t\t\treturn;\n\t\t}\n\t}, []);\n\n\tconst sendJoinRequest = () => {\n\t\tsocket.emit(\"join\", {\n\t\t\temail: senderEmail,\n\t\t\tconnectId: socket.id,\n\t\t});\n\t};\n\n\tconst socket = io(\"http://localhost:5001/\", {\n\t\twithCredentials: true,\n\t\textraHeaders: {\n\t\t\tConnectWithAnshul: \"Sure\",\n\t\t},\n\t});\n\n\tconst [chatMessage, setChatMessage] = useState(\"\");\n\tconst [senderEmail, setSenderEmail] = useState(null);\n\tconst [receiverEmail, setReceiverEmail] = useState(null);\n\tconst [chats, setChats] = useState([]);\n\n\tsocket.on(\"already_joined\", (msg) => {});\n\n\tsocket.on(\"joined\", (msg) => {\n\t\tconst requestObj = {\n\t\t\tsenderId: senderEmail,\n\t\t\treceiverId: receiverEmail,\n\t\t};\n\n\t\taxios\n\t\t\t.post(\"http://localhost:6001/chat/\", requestObj)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tif (response && response.data && response.data.length > 0) {\n\t\t\t\t\tconsole.log(\"Setting data, \", response.data);\n\n\t\t\t\t\tconst transformedArray = response.data.map((item) => ({\n\t\t\t\t\t\tid: item._id,\n\t\t\t\t\t\tmsg: item.message,\n\t\t\t\t\t\tsender: item.senderId,\n\t\t\t\t\t\treceiver: item.receiverId,\n\t\t\t\t\t\tcreatedDate: new Date(item.createdAt),\n\t\t\t\t\t\tupdatedDate: new Date(item.updatedAt),\n\t\t\t\t\t}));\n\n\t\t\t\t\tsetChats(transformedArray);\n\t\t\t\t}\n\t\t\t\tconsole.log(chats);\n\t\t\t})\n\t\t\t.catch((error) => console.error(error));\n\n\t\tconsole.log(chats);\n\t});\n\n\tsocket.on(\"new_msg\", (message) => {\n\t\tlet transformedMap = message;\n\t\ttransformedMap[\"createdDate\"] = new Date(message[\"createdDate\"]);\n\t\ttransformedMap[\"updatedDate\"] = new Date(message[\"updatedDate\"]);\n\n\t\tsetChats((prevChats) => [...prevChats, transformedMap]);\n\t});\n\n\tfunction sendMessageToTheSocket() {\n\t\tsocket.emit(\"new_msg\", {\n\t\t\tmessage: chatMessage,\n\t\t\treceiverId: receiverEmail,\n\t\t\tsenderId: senderEmail,\n\t\t});\n\n\t\tconst message = {\n\t\t\tmsg: chatMessage,\n\t\t\treceiver: receiverEmail,\n\t\t\tsender: senderEmail,\n\t\t\tid: generateSecureRandomKey(16),\n\t\t\tcreatedDate: new Date(),\n\t\t\tupdatedDate: new Date(),\n\t\t};\n\n\t\tsetChats((prevChats) => [...prevChats, message]);\n\t\tclearInputField();\n\n\t\tconst messageData = {\n\t\t\treceiverId: receiverEmail,\n\t\t\tsenderId: senderEmail,\n\t\t\tmessage: chatMessage,\n\t\t};\n\n\t\taxios\n\t\t\t.post(\"http://localhost:6001/chat/saveChats\", messageData)\n\t\t\t.then((resp) => console.log(resp))\n\t\t\t.catch((err) => console.error(err));\n\t}\n\n\tfunction clearInputField() {\n\t\tsetChatMessage(\"\");\n\t}\n\n\tfunction generateSecureRandomKey(length = 8) {\n\t\tconst array = new Uint8Array(length);\n\t\twindow.crypto.getRandomValues(array);\n\t\treturn Array.from(array, (byte) => byte.toString(16)).join(\"\");\n\t}\n\n\tfunction handleLoginSuccess(senderUsername) {\n\t\tsetSenderEmail(senderUsername);\n\t\tsendJoinRequest();\n\t}\n\n\treturn (\n\t\t<Container\n\t\t\tclassName=\"d-flex justify-content-center align-items-center\"\n\t\t\tstyle={{\n\t\t\t\twidth: \"80%\", // Adjust the width as needed\n\t\t\t\tmarginTop: \"100px\",\n\t\t\t\tmarginLeft: \"5%\",\n\t\t\t\tbackgroundColor: \"#f0f0f0\", // Add your desired background color\n\t\t\t\tpadding: \"20px\", // Add your desired padding\n\t\t\t\tboxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\", // Add your desired box shadow\n\t\t\t}}\n\t\t>\n\t\t\t{senderEmail ? (\n\t\t\t\t<HomePage\n\t\t\t\t\tonSendMessage={sendMessageToTheSocket}\n\t\t\t\t\tonSetReceiverId={(data) => setReceiverEmail(data)}\n\t\t\t\t\tsenderId={senderEmail}\n\t\t\t\t\treceiverId={receiverEmail}\n\t\t\t\t\tchats={chats}\n\t\t\t\t></HomePage>\n\t\t\t) : (\n\t\t\t\t<Register onLogin={handleLoginSuccess}></Register>\n\t\t\t)}\n\t\t</Container>\n\t);\n}\n\nexport default SocketCLientOne;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}