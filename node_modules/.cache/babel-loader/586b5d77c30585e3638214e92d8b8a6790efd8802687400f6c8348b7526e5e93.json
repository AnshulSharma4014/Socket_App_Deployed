{"ast":null,"code":"var _jsxFileName = \"/home/anshul/Documents/Github/Programming/socket-app/src/components/SocketClientOne.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Register from \"./Register\";\nimport HomePage from \"./HomePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SocketCLientOne extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatMessage: \"\",\n      senderEmail: \"\",\n      receiverEmail: \"\",\n      chats: []\n    };\n    this.socket = io(\"http://localhost:5001/\", {\n      withCredentials: true,\n      extraHeaders: {\n        ConnectWithAnshul: \"Sure\"\n      }\n    });\n    this.socket.on(\"already_joined\", msg => {});\n    this.socket.on(\"joined\", msg => {\n      const requestObj = {\n        senderId: this.state.senderEmail,\n        receiverId: this.state.receiverEmail\n      };\n      axios.post(\"http://localhost:6001/chat/\", requestObj).then(response => {\n        console.log(response);\n        if (response && response.data && response.data.length > 0) {\n          console.log(\"Setting data, \", response.data);\n          const transformedArray = response.data.map(item => ({\n            id: item._id,\n            msg: item.message,\n            sender: item.senderId,\n            receiver: item.receiverId,\n            createdDate: new Date(item.createdAt),\n            updatedDate: new Date(item.updatedAt)\n          }));\n          this.setState({\n            chats: transformedArray\n          });\n        }\n        console.log(this.state.chats);\n      }).catch(error => console.error(error));\n      console.log(this.state.chats);\n    });\n    this.socket.on(\"new_msg\", message => {\n      let transformedMap = message;\n      transformedMap[\"createdDate\"] = new Date(message[\"createdDate\"]);\n      transformedMap[\"updatedDate\"] = new Date(message[\"updatedDate\"]);\n      this.setState(prevState => ({\n        chats: [...prevState.chats, transformedMap]\n      }));\n    });\n    this.sendMessageToTheSocket = this.sendMessageToTheSocket.bind(this);\n    this.clearInputField = this.clearInputField.bind(this);\n    this.handleLoginSuccess = this.handleLoginSuccess.bind(this);\n    this.sendSocketJoinRequest = this.sendSocketJoinRequest.bind(this);\n    this.sendJoinRequest = this.sendJoinRequest.bind(this);\n  }\n  componentDidMount() {\n    this.checkForCookies();\n  }\n  checkForCookies() {\n    const myCookieValue = Cookies.get(\"anshul-chat-user\");\n    if (myCookieValue) {\n      this.setState({\n        senderEmail: myCookieValue\n      });\n    } else {\n      this.setState({\n        senderEmail: \"\"\n      });\n    }\n  }\n  sendJoinRequest() {\n    this.socket.emit(\"join\", {\n      email: this.state.senderEmail,\n      connectId: this.socket.id\n    });\n  }\n  sendSocketJoinRequest() {\n    this.socket.emit(\"join\", {\n      email: this.state.senderEmail,\n      connectId: this.socket.id\n    });\n  }\n  sendMessageToTheSocket() {\n    this.socket.emit(\"new_msg\", {\n      message: this.state.chatMessage,\n      receiverId: this.state.receiverEmail,\n      senderId: this.state.senderEmail\n    });\n    const message = {\n      msg: this.state.chatMessage,\n      receiver: this.state.receiverEmail,\n      sender: this.state.senderEmail,\n      id: this.generateSecureRandomKey(16),\n      createdDate: new Date(),\n      updatedDate: new Date()\n    };\n    this.setState(prevState => ({\n      chats: [...prevState.chats, message]\n    }));\n    this.clearInputField();\n    const messageData = {\n      receiverId: this.state.receiverEmail,\n      senderId: this.state.senderEmail,\n      message: this.state.chatMessage\n    };\n    axios.post(\"http://localhost:6001/chat/saveChats\", messageData).then(resp => console.log(resp)).catch(err => console.error(err));\n  }\n  clearInputField() {\n    this.setState({\n      chatMessage: \"\"\n    });\n  }\n  generateSecureRandomKey(length = 8) {\n    const array = new Uint8Array(length);\n    window.crypto.getRandomValues(array);\n    return Array.from(array, byte => byte.toString(16)).join(\"\");\n  }\n  handleLoginSuccess(senderUsername) {\n    this.setState({\n      senderEmail: senderUsername\n    }, () => {\n      this.sendJoinRequest();\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        width: \"80%\",\n        marginTop: \"100px\",\n        marginLeft: \"5%\",\n        backgroundColor: \"#f0f0f0\",\n        padding: \"20px\",\n        boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\"\n      },\n      children: this.state.senderEmail ? /*#__PURE__*/_jsxDEV(HomePage, {\n        onSendMessage: this.sendMessageToTheSocket,\n        onSetReceiverId: data => this.setState({\n          receiverEmail: data\n        }),\n        onfetchChatData: this.sendSocketJoinRequest,\n        senderId: this.state.senderEmail,\n        receiverId: this.state.receiverEmail,\n        chats: this.state.chats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onLogin: this.handleLoginSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default SocketCLientOne;","map":{"version":3,"names":["React","Component","Container","io","axios","Cookies","Register","HomePage","jsxDEV","_jsxDEV","SocketCLientOne","constructor","props","state","chatMessage","senderEmail","receiverEmail","chats","socket","withCredentials","extraHeaders","ConnectWithAnshul","on","msg","requestObj","senderId","receiverId","post","then","response","console","log","data","length","transformedArray","map","item","id","_id","message","sender","receiver","createdDate","Date","createdAt","updatedDate","updatedAt","setState","catch","error","transformedMap","prevState","sendMessageToTheSocket","bind","clearInputField","handleLoginSuccess","sendSocketJoinRequest","sendJoinRequest","componentDidMount","checkForCookies","myCookieValue","get","emit","email","connectId","generateSecureRandomKey","messageData","resp","err","array","Uint8Array","window","crypto","getRandomValues","Array","from","byte","toString","join","senderUsername","render","className","style","width","marginTop","marginLeft","backgroundColor","padding","boxShadow","children","onSendMessage","onSetReceiverId","onfetchChatData","fileName","_jsxFileName","lineNumber","columnNumber","onLogin"],"sources":["/home/anshul/Documents/Github/Programming/socket-app/src/components/SocketClientOne.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Register from \"./Register\";\nimport HomePage from \"./HomePage\";\n\nclass SocketCLientOne extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tchatMessage: \"\",\n\t\t\tsenderEmail: \"\",\n\t\t\treceiverEmail: \"\",\n\t\t\tchats: [],\n\t\t};\n\n\t\tthis.socket = io(\"http://localhost:5001/\", {\n\t\t\twithCredentials: true,\n\t\t\textraHeaders: {\n\t\t\t\tConnectWithAnshul: \"Sure\",\n\t\t\t},\n\t\t});\n\n\t\tthis.socket.on(\"already_joined\", (msg) => {});\n\n\t\tthis.socket.on(\"joined\", (msg) => {\n\t\t\tconst requestObj = {\n\t\t\t\tsenderId: this.state.senderEmail,\n\t\t\t\treceiverId: this.state.receiverEmail,\n\t\t\t};\n\n\t\t\taxios\n\t\t\t\t.post(\"http://localhost:6001/chat/\", requestObj)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tif (response && response.data && response.data.length > 0) {\n\t\t\t\t\t\tconsole.log(\"Setting data, \", response.data);\n\n\t\t\t\t\t\tconst transformedArray = response.data.map((item) => ({\n\t\t\t\t\t\t\tid: item._id,\n\t\t\t\t\t\t\tmsg: item.message,\n\t\t\t\t\t\t\tsender: item.senderId,\n\t\t\t\t\t\t\treceiver: item.receiverId,\n\t\t\t\t\t\t\tcreatedDate: new Date(item.createdAt),\n\t\t\t\t\t\t\tupdatedDate: new Date(item.updatedAt),\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\tthis.setState({ chats: transformedArray });\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(this.state.chats);\n\t\t\t\t})\n\t\t\t\t.catch((error) => console.error(error));\n\n\t\t\tconsole.log(this.state.chats);\n\t\t});\n\n\t\tthis.socket.on(\"new_msg\", (message) => {\n\t\t\tlet transformedMap = message;\n\t\t\ttransformedMap[\"createdDate\"] = new Date(message[\"createdDate\"]);\n\t\t\ttransformedMap[\"updatedDate\"] = new Date(message[\"updatedDate\"]);\n\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\tchats: [...prevState.chats, transformedMap],\n\t\t\t}));\n\t\t});\n\n\t\tthis.sendMessageToTheSocket = this.sendMessageToTheSocket.bind(this);\n\t\tthis.clearInputField = this.clearInputField.bind(this);\n\t\tthis.handleLoginSuccess = this.handleLoginSuccess.bind(this);\n\t\tthis.sendSocketJoinRequest = this.sendSocketJoinRequest.bind(this);\n\t\tthis.sendJoinRequest = this.sendJoinRequest.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.checkForCookies();\n\t}\n\n\tcheckForCookies() {\n\t\tconst myCookieValue = Cookies.get(\"anshul-chat-user\");\n\n\t\tif (myCookieValue) {\n\t\t\tthis.setState({ senderEmail: myCookieValue });\n\t\t} else {\n\t\t\tthis.setState({ senderEmail: \"\" });\n\t\t}\n\t}\n\n\tsendJoinRequest() {\n\t\tthis.socket.emit(\"join\", {\n\t\t\temail: this.state.senderEmail,\n\t\t\tconnectId: this.socket.id,\n\t\t});\n\t}\n\n\tsendSocketJoinRequest() {\n\t\tthis.socket.emit(\"join\", {\n\t\t\temail: this.state.senderEmail,\n\t\t\tconnectId: this.socket.id,\n\t\t});\n\t}\n\n\tsendMessageToTheSocket() {\n\t\tthis.socket.emit(\"new_msg\", {\n\t\t\tmessage: this.state.chatMessage,\n\t\t\treceiverId: this.state.receiverEmail,\n\t\t\tsenderId: this.state.senderEmail,\n\t\t});\n\n\t\tconst message = {\n\t\t\tmsg: this.state.chatMessage,\n\t\t\treceiver: this.state.receiverEmail,\n\t\t\tsender: this.state.senderEmail,\n\t\t\tid: this.generateSecureRandomKey(16),\n\t\t\tcreatedDate: new Date(),\n\t\t\tupdatedDate: new Date(),\n\t\t};\n\n\t\tthis.setState((prevState) => ({\n\t\t\tchats: [...prevState.chats, message],\n\t\t}));\n\n\t\tthis.clearInputField();\n\n\t\tconst messageData = {\n\t\t\treceiverId: this.state.receiverEmail,\n\t\t\tsenderId: this.state.senderEmail,\n\t\t\tmessage: this.state.chatMessage,\n\t\t};\n\n\t\taxios\n\t\t\t.post(\"http://localhost:6001/chat/saveChats\", messageData)\n\t\t\t.then((resp) => console.log(resp))\n\t\t\t.catch((err) => console.error(err));\n\t}\n\n\tclearInputField() {\n\t\tthis.setState({ chatMessage: \"\" });\n\t}\n\n\tgenerateSecureRandomKey(length = 8) {\n\t\tconst array = new Uint8Array(length);\n\t\twindow.crypto.getRandomValues(array);\n\t\treturn Array.from(array, (byte) => byte.toString(16)).join(\"\");\n\t}\n\n\thandleLoginSuccess(senderUsername) {\n\t\tthis.setState({ senderEmail: senderUsername }, () => {\n\t\t\tthis.sendJoinRequest();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container\n\t\t\t\tclassName=\"d-flex justify-content-center align-items-center\"\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: \"80%\",\n\t\t\t\t\tmarginTop: \"100px\",\n\t\t\t\t\tmarginLeft: \"5%\",\n\t\t\t\t\tbackgroundColor: \"#f0f0f0\",\n\t\t\t\t\tpadding: \"20px\",\n\t\t\t\t\tboxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.state.senderEmail ? (\n\t\t\t\t\t<HomePage\n\t\t\t\t\t\tonSendMessage={this.sendMessageToTheSocket}\n\t\t\t\t\t\tonSetReceiverId={(data) =>\n\t\t\t\t\t\t\tthis.setState({ receiverEmail: data })\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonfetchChatData={this.sendSocketJoinRequest}\n\t\t\t\t\t\tsenderId={this.state.senderEmail}\n\t\t\t\t\t\treceiverId={this.state.receiverEmail}\n\t\t\t\t\t\tchats={this.state.chats}\n\t\t\t\t\t></HomePage>\n\t\t\t\t) : (\n\t\t\t\t\t<Register onLogin={this.handleLoginSuccess}></Register>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default SocketCLientOne;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}