{"ast":null,"code":"var _jsxFileName = \"/home/anshul/Documents/Github/Programming/socket-app/src/components/SocketClientOne.js\";\nimport { io } from \"socket.io-client\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SocketCLientOne() {\n  const socket = io(\"http://localhost:5001/\");\n  socket.on(\"connect\", () => {\n    console.log(socket.id);\n    const engine = socket.io.engine;\n    console.log(engine.transport.name); // in most cases, prints \"polling\"\n\n    engine.once(\"upgrade\", () => {\n      // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n      console.log(engine.transport.name); // in most cases, prints \"websocket\"\n    });\n    engine.on(\"packet\", ({\n      type,\n      data\n    }) => {\n      // called for each packet received\n      console.log(`type of packet received: ${type}, and data is: ${JSON.stringify(data)}`);\n    });\n    engine.on(\"packetCreate\", ({\n      type,\n      data\n    }) => {\n      // called for each packet sent\n      console.log(`type of packet created: ${type}, and data is: ${JSON.stringify(data)}`);\n    });\n    engine.on(\"drain\", () => {\n      // called when the write buffer is drained\n    });\n    engine.on(\"close\", reason => {\n      // called when the underlying connection is closed\n    });\n  });\n  socket.on(\"data\", someData => {\n    console.log(someData);\n  });\n  function handleInputChange(event) {\n    console.log(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      position: \"fixed\",\n      bottom: 0,\n      right: 0,\n      width: \"30%\",\n      height: \"60%\",\n      backgroundColor: \"#f0f0f0\",\n      // Add your desired background color\n      padding: \"20px\",\n      // Add your desired padding\n      boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\" // Add your desired box shadow\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Type your message here...\",\n          name: \"chat-input\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n}\n_c = SocketCLientOne;\nexport default SocketCLientOne;\nvar _c;\n$RefreshReg$(_c, \"SocketCLientOne\");","map":{"version":3,"names":["io","Container","Form","jsxDEV","_jsxDEV","SocketCLientOne","socket","on","console","log","id","engine","transport","name","once","type","data","JSON","stringify","reason","someData","handleInputChange","event","target","value","style","position","bottom","right","width","height","backgroundColor","padding","boxShadow","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/anshul/Documents/Github/Programming/socket-app/src/components/SocketClientOne.js"],"sourcesContent":["import { io } from \"socket.io-client\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction SocketCLientOne() {\n\tconst socket = io(\"http://localhost:5001/\");\n\n\tsocket.on(\"connect\", () => {\n\t\tconsole.log(socket.id);\n\n\t\tconst engine = socket.io.engine;\n\t\tconsole.log(engine.transport.name); // in most cases, prints \"polling\"\n\n\t\tengine.once(\"upgrade\", () => {\n\t\t\t// called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n\t\t\tconsole.log(engine.transport.name); // in most cases, prints \"websocket\"\n\t\t});\n\n\t\tengine.on(\"packet\", ({ type, data }) => {\n\t\t\t// called for each packet received\n\t\t\tconsole.log(\n\t\t\t\t`type of packet received: ${type}, and data is: ${JSON.stringify(\n\t\t\t\t\tdata\n\t\t\t\t)}`\n\t\t\t);\n\t\t});\n\n\t\tengine.on(\"packetCreate\", ({ type, data }) => {\n\t\t\t// called for each packet sent\n\t\t\tconsole.log(\n\t\t\t\t`type of packet created: ${type}, and data is: ${JSON.stringify(\n\t\t\t\t\tdata\n\t\t\t\t)}`\n\t\t\t);\n\t\t});\n\n\t\tengine.on(\"drain\", () => {\n\t\t\t// called when the write buffer is drained\n\t\t});\n\n\t\tengine.on(\"close\", (reason) => {\n\t\t\t// called when the underlying connection is closed\n\t\t});\n\t});\n\n\tsocket.on(\"data\", (someData) => {\n\t\tconsole.log(someData);\n\t});\n\n\tfunction handleInputChange(event) {\n\t\tconsole.log(event.target.value);\n\t}\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={{\n\t\t\t\tposition: \"fixed\",\n\t\t\t\tbottom: 0,\n\t\t\t\tright: 0,\n\t\t\t\twidth: \"30%\",\n\t\t\t\theight: \"60%\",\n\t\t\t\tbackgroundColor: \"#f0f0f0\", // Add your desired background color\n\t\t\t\tpadding: \"20px\", // Add your desired padding\n\t\t\t\tboxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\", // Add your desired box shadow\n\t\t\t}}\n\t\t>\n\t\t\t<Form>\n\t\t\t\t<Form.Group controlId=\"exampleForm.ControlInput1\">\n\t\t\t\t\t<Form.Label>Message</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Type your message here...\"\n\t\t\t\t\t\tname=\"chat-input\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t</Container>\n\t);\n}\n\nexport default SocketCLientOne;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}